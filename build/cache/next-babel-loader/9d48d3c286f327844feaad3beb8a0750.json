{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nvar actionTypes = {\n  TEST: \"TEST\",\n  SIGNUP_SUCCESS: \"SIGNUP_SUCCESS\",\n  VERIFY_SUCCESS: \"VERIFY_SUCCESS\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  ERROR_SUBMIT_FORM_DATA: \"ERROR_SUBMIT_FORM_DATA\"\n};\nvar actions = {\n  setTest: function setTest(val) {\n    return {\n      type: actionTypes.TEST,\n      payload: val\n    };\n  },\n  submitSignup: function submitSignup(formData) {\n    delete formData[\"RePassword\"];\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/people/signup\"), formData).then(function (response) {\n                  console.log(response);\n                  dispatch({\n                    type: actionTypes.SIGNUP_SUCCESS\n                  });\n                })[\"catch\"](function (error) {\n                  console.log(error.response);\n\n                  if (error.response.data.includes(\"UsernameExistsException\")) {\n                    dispatch({\n                      type: actionTypes.ERROR_SUBMIT_FORM_DATA,\n                      payload: \"Username exists!\"\n                    });\n                  }\n                });\n\n              case 2:\n                resp = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  },\n  verifyUser: function verifyUser(data) {\n    console.log(data);\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/people/signup/verify\"), data).then(function (response) {\n                  console.log(response);\n                  dispatch({\n                    type: actionTypes.VERIFY_SUCCESS\n                  });\n                })[\"catch\"](function (error) {\n                  console.log(error.response);\n\n                  if (error) {\n                    dispatch({\n                      type: actionTypes.ERROR_SUBMIT_FORM_DATA,\n                      payload: \"Failed to verify!\"\n                    });\n                  }\n                });\n\n              case 2:\n                resp = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  },\n  submitLogin: function submitLogin(formData) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.post(\"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/people/login\"), formData).then(function (response) {\n                  console.log(response);\n                  dispatch({\n                    type: actionTypes.LOGIN_SUCCESS\n                  });\n                })[\"catch\"](function (error) {\n                  console.log(error.response);\n\n                  if (error) {\n                    dispatch({\n                      type: actionTypes.ERROR_SUBMIT_FORM_DATA,\n                      payload: \"Email or password are invalid!\"\n                    });\n                  }\n                });\n\n              case 2:\n                resp = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n};\nexport default _objectSpread(_objectSpread({}, actionTypes), actions);","map":null,"metadata":{},"sourceType":"module"}