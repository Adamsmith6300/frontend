{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"semantic-ui-react\";\n\nconst SignupForm = ({\n  submitSignup,\n  formError,\n  successfulSignup\n}) => {\n  let isValidEmail = true ? null : {\n    content: \"Please enter a valid email address\",\n    pointing: \"below\"\n  };\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: formData,\n    1: updateFormData\n  } = useState({});\n\n  const handleChange = e => {\n    updateFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value.trim()\n    }));\n  };\n\n  const handleLoadingChange = e => setLoading(e.target.value);\n\n  const handleSubmit = () => {\n    submitSignup(formData);\n  };\n\n  return __jsx(Form, {\n    loading: isLoading,\n    error: formError != undefined,\n    onSubmit: e => {\n      setLoading(true);\n      e.preventDefault();\n      handleSubmit();\n      setLoading(false);\n    }\n  }, __jsx(Form.Input, {\n    label: \"Username\",\n    onChange: handleChange,\n    name: \"username\",\n    required: true,\n    placeholder: \"Username\"\n  }), __jsx(Form.Input, {\n    label: \"Email\",\n    onChange: handleChange,\n    name: \"email\",\n    required: true,\n    placeholder: \"adam@email.com\",\n    type: \"email\"\n  }), __jsx(Form.Input, {\n    label: \"Enter Password\",\n    type: \"password\",\n    onChange: handleChange,\n    name: \"password\",\n    required: true\n  }), __jsx(Form.Input, {\n    label: \"Re-enter Password\",\n    type: \"password\",\n    onChange: handleChange,\n    name: \"RePassword\",\n    required: true\n  }), __jsx(Form.Field, null, __jsx(Checkbox, {\n    name: \"agreeTerms\",\n    label: \"I agree to the Terms and Conditions\"\n  })), formError != undefined ? __jsx(\"div\", {\n    className: \"ui error message\"\n  }, __jsx(\"div\", {\n    className: \"header\"\n  }, formError), __jsx(\"p\", null, \"Please choose another username.\")) : null, __jsx(Button, {\n    type: \"submit\"\n  }, \"Submit\"));\n};\n\nexport default SignupForm;","map":null,"metadata":{},"sourceType":"module"}