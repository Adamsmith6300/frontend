{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/adam/loma/frontend/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { Button } from \"semantic-ui-react\";\n\nvar Page = function Page(_ref) {\n  var products = _ref.products;\n\n  if (products != undefined && products.length > 0) {\n    products = products.map(function (product, index) {\n      return __jsx(\"li\", {\n        key: product.ProductId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }\n      }, product.title);\n    });\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"LOMA\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, products));\n};\n\n_c = Page;\nPage.getStaticProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var posts;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // Call an external API endpoint to get posts.\n          // You can use any data fetching library\n          // const res = await fetch('https://.../posts')\n          posts = [1, 2, 3, 4]; // By returning { props: posts }, the Blog component\n          // will receive `posts` as a prop at build time\n\n          return _context.abrupt(\"return\", {\n            props: {\n              posts: posts\n            }\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})); // Page.getInitialProps = async ({ store, pathname, query }) => {\n//   console.log(\"HITTTING\")\n//   store.dispatch(actions.getProducts());\n//   return {val:\"\"}\n// };\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setTest: function setTest(val) {\n      return dispatch(actions.setTest(val));\n    }\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(Page);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/index.js"],"names":["Layout","connect","actions","Button","Page","products","undefined","length","map","product","index","ProductId","title","getStaticProps","posts","props","mapDispatchToProps","dispatch","setTest","val","state"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAE7B,MAAIA,QAAQ,IAAIC,SAAZ,IAAyBD,QAAQ,CAACE,MAAT,GAAkB,CAA/C,EAAkD;AAChDF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC1C,aAAQ;AAAI,QAAA,GAAG,EAAED,OAAO,CAACE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BF,OAAO,CAACG,KAArC,CAAR;AACD,KAFU,CAAX;AAGD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CAFF,CADF;AASD,CAjBD;;KAAMD,I;AAmBNA,IAAI,CAACS,cAAL,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACA;AACA;AACMC,UAAAA,KAJc,GAIN,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAJM,EAMpB;AACA;;AAPoB,2CAQb;AACLC,YAAAA,KAAK,EAAE;AACLD,cAAAA,KAAK,EAALA;AADK;AADF,WARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,G,CAgBA;AACA;AACA;AACA;AACA;;AAGA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AAAEC,IAAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,aAASF,QAAQ,CAACf,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAD,CAAjB;AAAA;AAAX,GAAP;AACD,CAFD;;AAIA,eAAelB,OAAO,CAAC,UAACmB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,EAAmBJ,kBAAnB,CAAP,CAA8CZ,IAA9C,CAAf","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\n\nimport { Button } from \"semantic-ui-react\";\n\nconst Page = ({ products }) => {\n  \n  if (products != undefined && products.length > 0) {\n    products = products.map((product, index) => {\n      return (<li key={product.ProductId}>{product.title}</li>)\n    })\n  }\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl text-center\">LOMA</h1>\n      <ul>\n        {products}\n      </ul>\n    </Layout>\n  );\n  \n};\n\nPage.getStaticProps = async () => {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  // const res = await fetch('https://.../posts')\n  const posts = [1,2,3,4]\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts,\n    },\n  }\n}\n\n\n// Page.getInitialProps = async ({ store, pathname, query }) => {\n//   console.log(\"HITTTING\")\n//   store.dispatch(actions.getProducts());\n//   return {val:\"\"}\n// };\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return { setTest: (val) => dispatch(actions.setTest(val)) };\n};\n\nexport default connect((state) => state, mapDispatchToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}