{"ast":null,"code":"var _jsxFileName = \"/home/adam/loma/frontend/components/resendForm.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"semantic-ui-react\";\n\nconst ResendForm = ({\n  formError,\n  submitResend,\n  successfulResend\n}) => {\n  const {\n    0: formData,\n    1: updateFormData\n  } = useState({});\n\n  const handleChange = e => {\n    updateFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value.trim()\n    }));\n  };\n\n  const handleSubmit = () => {\n    submitLogin(formData);\n  };\n\n  return __jsx(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Input, {\n    label: \"Email\",\n    placeholder: \"adam@email.com\",\n    name: \"email\",\n    type: \"email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default ResendForm;","map":{"version":3,"sources":["/home/adam/loma/frontend/components/resendForm.js"],"names":["React","useState","Button","Checkbox","Form","Input","ResendForm","formError","submitResend","successfulResend","formData","updateFormData","handleChange","e","target","name","value","trim","handleSubmit","submitLogin","preventDefault"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,mBAA9C;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,CAAD,KAAoD;AAGrE,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA6BV,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,cAAc,iCACTD,QADS;AAEZ,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeC,IAAf;AAFL,OAAd;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,WAAW,CAACT,QAAD,CAAX;AACD,GAFD;;AAIA,SACE,MAAC,IAAD;AACE,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACO,cAAF;AACAF,MAAAA,YAAY;AACb,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEN,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADF;AAgBD,CAhCD;;AAkCA,eAAeN,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"semantic-ui-react\";\n\nconst ResendForm = ({ formError, submitResend, successfulResend } ) => {\n\n\n  const [formData, updateFormData] = useState({});\n\n  const handleChange = (e) => {\n    updateFormData({\n      ...formData,\n      [e.target.name]: e.target.value.trim(),\n    });\n  };\n\n  const handleSubmit = () => {\n    submitLogin(formData);\n  };\n  \n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}>\n      <Form.Input \n        label=\"Email\"\n        placeholder=\"adam@email.com\"\n        name=\"email\"\n        type=\"email\"\n        onChange={handleChange} \n      />\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default ResendForm;\n"]},"metadata":{},"sourceType":"module"}