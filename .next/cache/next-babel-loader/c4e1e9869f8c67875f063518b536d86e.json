{"ast":null,"code":"var _jsxFileName = \"/home/adam/loma/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Page = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"LOMA\"), __jsx(Button, {\n    onClick: () => {\n      props.setTest(Math.random());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"TEST\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Prop from Redux \", props.val));\n}; // No need to wrap pages if App was wrapped\n// Page.getInitialProps = ({ store, pathname, query }) => {\n//   // console.log(store);\n//   store.dispatch({ type: \"FOO\", payload: \"waaa\" }); // The component can read from the store's state when rendered\n//   return { custom: \"we\" }; // You can pass some custom props to the component from here\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTest: val => dispatch(actions.setTest(val))\n  };\n};\n\nexport default connect(state => state, mapDispatchToProps)(Page);","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/index.js"],"names":["Layout","connect","actions","Button","Page","props","setTest","Math","random","val","mapDispatchToProps","dispatch","state"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAI,CAACC,MAAL,EAAd;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBH,KAAK,CAACI,GAA5B,CATF,CADF;AAaD,CAdD,C,CAeA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AAAEL,IAAAA,OAAO,EAAGG,GAAD,IAASE,QAAQ,CAACT,OAAO,CAACI,OAAR,CAAgBG,GAAhB,CAAD;AAA5B,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CAAEW,KAAD,IAAWA,KAAZ,EAAmBF,kBAAnB,CAAP,CAA8CN,IAA9C,CAAf","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\n\nimport { Button } from \"semantic-ui-react\";\n\nconst Page = (props) => {\n  return (\n    <Layout>\n      <h1 className=\"text-3xl text-center\">LOMA</h1>\n      <Button\n        onClick={() => {\n          props.setTest(Math.random());\n        }}\n      >\n        TEST\n      </Button>\n      <div>Prop from Redux {props.val}</div>\n    </Layout>\n  );\n};\n// No need to wrap pages if App was wrapped\n// Page.getInitialProps = ({ store, pathname, query }) => {\n//   // console.log(store);\n//   store.dispatch({ type: \"FOO\", payload: \"waaa\" }); // The component can read from the store's state when rendered\n//   return { custom: \"we\" }; // You can pass some custom props to the component from here\n// };\nconst mapDispatchToProps = (dispatch) => {\n  return { setTest: (val) => dispatch(actions.setTest(val)) };\n};\n\nexport default connect((state) => state, mapDispatchToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}