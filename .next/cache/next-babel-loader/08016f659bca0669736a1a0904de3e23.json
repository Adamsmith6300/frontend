{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/adam/loma/frontend/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { Button } from \"semantic-ui-react\";\n\nvar Page = function Page(_ref) {\n  var products = _ref.products;\n\n  if (products != undefined && products.length > 0) {\n    products = products.map(function (product, index) {\n      return __jsx(\"li\", {\n        key: product.ProductId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }\n      }, product.title);\n    });\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"LOMA\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, products));\n};\n\n_c = Page;\n\nPage.getInitialProps = function (_ref2) {\n  var store = _ref2.store,\n      pathname = _ref2.pathname,\n      query = _ref2.query;\n  store.dispatch(actions.getProducts());\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setTest: function setTest(val) {\n      return dispatch(actions.setTest(val));\n    }\n  };\n};\n\nexport default connect(function (state) {\n  return state;\n}, mapDispatchToProps)(Page);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/index.js"],"names":["Layout","connect","actions","Button","Page","products","undefined","length","map","product","index","ProductId","title","getInitialProps","store","pathname","query","dispatch","getProducts","mapDispatchToProps","setTest","val","state"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAE7B,MAAIA,QAAQ,IAAIC,SAAZ,IAAyBD,QAAQ,CAACE,MAAT,GAAkB,CAA/C,EAAkD;AAChDF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC1C,aAAQ;AAAI,QAAA,GAAG,EAAED,OAAO,CAACE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BF,OAAO,CAACG,KAArC,CAAR;AACD,KAFU,CAAX;AAGD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CAFF,CADF;AAQD,CAfD;;KAAMD,I;;AAiBNA,IAAI,CAACS,eAAL,GAAuB,iBAAgC;AAAA,MAA7BC,KAA6B,SAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,SAAtBA,QAAsB;AAAA,MAAZC,KAAY,SAAZA,KAAY;AACrDF,EAAAA,KAAK,CAACG,QAAN,CAAef,OAAO,CAACgB,WAAR,EAAf;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,QAAD,EAAc;AACvC,SAAO;AAAEG,IAAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,aAASJ,QAAQ,CAACf,OAAO,CAACkB,OAAR,CAAgBC,GAAhB,CAAD,CAAjB;AAAA;AAAX,GAAP;AACD,CAFD;;AAIA,eAAepB,OAAO,CAAC,UAACqB,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,EAAmBH,kBAAnB,CAAP,CAA8Cf,IAA9C,CAAf","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\n\nimport { Button } from \"semantic-ui-react\";\n\nconst Page = ({ products }) => {\n  \n  if (products != undefined && products.length > 0) {\n    products = products.map((product, index) => {\n      return (<li key={product.ProductId}>{product.title}</li>)\n    })\n  }\n  return (\n    <Layout>\n      <h1 className=\"text-3xl text-center\">LOMA</h1>\n      <ul>\n        {products}\n      </ul>\n    </Layout>\n  );\n};\n\nPage.getInitialProps = ({ store, pathname, query }) => {\n  store.dispatch(actions.getProducts());\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { setTest: (val) => dispatch(actions.setTest(val)) };\n};\n\nexport default connect((state) => state, mapDispatchToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}