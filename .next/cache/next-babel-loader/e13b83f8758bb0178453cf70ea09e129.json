{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\nimport middleware from \"./middleware\";\nimport actionTypes from \"./actions\";\nconst initialState = {}; // create your reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case actionTypes.ERROR_SUBMIT_FORM_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        formError: action.payload\n      });\n\n    case actionTypes.SIGNUP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successfulSignup: true\n      });\n\n    case actionTypes.LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successfulLogin: true\n      });\n\n    case actionTypes.VERIFY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        verifiedUser: true\n      });\n\n    case actionTypes.VERIFY_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case actionTypes.ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case actionTypes.GET_PRODUCTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; // create a makeStore function\n\n\nconst makeStore = context => createStore(reducer, compose(applyMiddleware(thunk, ...middleware))); // export an assembled wrapper\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/home/adam/loma/frontend/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","createWrapper","HYDRATE","middleware","actionTypes","initialState","reducer","state","action","type","payload","ERROR_SUBMIT_FORM_DATA","formError","SIGNUP_SUCCESS","successfulSignup","LOGIN_SUCCESS","successfulLogin","VERIFY_SUCCESS","verifiedUser","VERIFY_FAILED","error","ERROR","GET_PRODUCTS","products","makeStore","context","wrapper","debug"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACE,6CAAYK,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACF,SAAKN,WAAW,CAACO,sBAAjB;AACE,6CAAYJ,KAAZ;AAAmBK,QAAAA,SAAS,EAAEJ,MAAM,CAACE;AAArC;;AACF,SAAKN,WAAW,CAACS,cAAjB;AACE,6CAAYN,KAAZ;AAAmBO,QAAAA,gBAAgB,EAAE;AAArC;;AACF,SAAKV,WAAW,CAACW,aAAjB;AACE,6CAAYR,KAAZ;AAAmBS,QAAAA,eAAe,EAAE;AAApC;;AACF,SAAKZ,WAAW,CAACa,cAAjB;AACE,6CAAYV,KAAZ;AAAmBW,QAAAA,YAAY,EAAE;AAAjC;;AACF,SAAKd,WAAW,CAACe,aAAjB;AACE,6CAAYZ,KAAZ;AAAmBa,QAAAA,KAAK,EAAEZ,MAAM,CAACE;AAAjC;;AACF,SAAKN,WAAW,CAACiB,KAAjB;AACE,6CAAYd,KAAZ;AAAmBa,QAAAA,KAAK,EAAEZ,MAAM,CAACE;AAAjC;;AACF,SAAKN,WAAW,CAACkB,YAAjB;AACE,6CAAYf,KAAZ;AAAmBgB,QAAAA,QAAQ,EAAEf,MAAM,CAACE;AAApC;;AACF;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CArBD,C,CAuBA;;;AACA,MAAMiB,SAAS,GAAIC,OAAD,IAChB5B,WAAW,CAACS,OAAD,EAAUP,OAAO,CAACD,eAAe,CAACE,KAAD,EAAQ,GAAGG,UAAX,CAAhB,CAAjB,CADb,C,CAGA;;;AACA,OAAO,MAAMuB,OAAO,GAAGzB,aAAa,CAACuB,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\n\nimport middleware from \"./middleware\";\nimport actionTypes from \"./actions\";\n\nconst initialState = {};\n\n// create your reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return { ...state, ...action.payload };\n    case actionTypes.ERROR_SUBMIT_FORM_DATA:\n      return { ...state, formError: action.payload };\n    case actionTypes.SIGNUP_SUCCESS:\n      return { ...state, successfulSignup: true };\n    case actionTypes.LOGIN_SUCCESS:\n      return { ...state, successfulLogin: true };\n    case actionTypes.VERIFY_SUCCESS:\n      return { ...state, verifiedUser: true };\n    case actionTypes.VERIFY_FAILED:\n      return { ...state, error: action.payload };\n    case actionTypes.ERROR:\n      return { ...state, error: action.payload };\n    case actionTypes.GET_PRODUCTS:\n      return { ...state, products: action.payload };\n    default:\n      return state;\n  }\n};\n\n// create a makeStore function\nconst makeStore = (context) =>\n  createStore(reducer, compose(applyMiddleware(thunk, ...middleware)));\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}