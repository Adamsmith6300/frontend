{"ast":null,"code":"var _jsxFileName = \"/home/adam/loma/frontend/pages/confirmUser.js\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { withRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport Link from \"next/link\";\n\nconst Page = ({\n  verifiedUser,\n  verifyUser,\n  router,\n  error\n}) => {\n  useEffect(() => {\n    if (router && router.query && !error) {\n      if (router.query.confirmation_code && router.query.user_name) {\n        verifyUser({\n          code: router.query.confirmation_code,\n          username: router.query.user_name\n        });\n      } else {\n        router.push(\"/\");\n      }\n    }\n  });\n\n  if (verifiedUser) {\n    router.push(\"/login\");\n  }\n\n  return __jsx(Layout, {\n    verifyUser: verifyUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, error != undefined ? __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"text-2xl text-red-500 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, error), __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Login\"))) : __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Verifying user...\"));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyUser: data => dispatch(actions.verifyUser(data))\n  };\n};\n\nexport default connect(state => state, mapDispatchToProps)(withRouter(Page));","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/confirmUser.js"],"names":["Layout","connect","actions","withRouter","React","useEffect","Button","Link","Page","verifiedUser","verifyUser","router","error","query","confirmation_code","user_name","code","username","push","undefined","mapDispatchToProps","dispatch","data","state"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAE5DP,EAAAA,SAAS,CAAE,MAAI;AACb,QAAIM,MAAM,IAAIA,MAAM,CAACE,KAAjB,IAA0B,CAACD,KAA/B,EAAsC;AACpC,UAAID,MAAM,CAACE,KAAP,CAAaC,iBAAb,IAAkCH,MAAM,CAACE,KAAP,CAAaE,SAAnD,EAA8D;AAC1DL,QAAAA,UAAU,CAAC;AACPM,UAAAA,IAAI,EAAEL,MAAM,CAACE,KAAP,CAAaC,iBADZ;AAEPG,UAAAA,QAAQ,EAAEN,MAAM,CAACE,KAAP,CAAaE;AAFhB,SAAD,CAAV;AAIH,OALD,MAKO;AACLJ,QAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACD;AACF;AACF,GAXQ,CAAT;;AAaA,MAAIT,YAAJ,EAAkB;AAChBE,IAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAER,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,IAAIO,SAAT,GACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CP,KAA3C,CADF,EAEG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADL,CAFH,CADD,GAQC;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATJ,CADF;AAcD,CAjCD;;AAqCA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AAACX,IAAAA,UAAU,EAAGY,IAAD,IAAUD,QAAQ,CAACnB,OAAO,CAACQ,UAAR,CAAmBY,IAAnB,CAAD;AAA/B,GAAP;AACD,CAFD;;AAIA,eAAgBrB,OAAO,CAAEsB,KAAD,IAAWA,KAAZ,EAAmBH,kBAAnB,CAAP,CAA8CjB,UAAU,CAACK,IAAD,CAAxD,CAAhB","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { withRouter } from 'next/router'\nimport React, { useEffect } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport Link from \"next/link\"\n\nconst Page = ({ verifiedUser, verifyUser, router, error }) => {\n  \n  useEffect( ()=>{\n    if (router && router.query && !error) {\n      if (router.query.confirmation_code && router.query.user_name) {\n          verifyUser({\n              code: router.query.confirmation_code,\n              username: router.query.user_name\n          })\n      } else {\n        router.push(\"/\");\n      }   \n    }\n  });\n  \n  if (verifiedUser) {\n    router.push(\"/login\");\n  }\n\n  return (\n    <Layout verifyUser={verifyUser}>\n      {error != undefined ?\n        <div className=\"text-center\">\n          <p className=\"text-2xl text-red-500 mb-4\">{error}</p>\n           <Link href='/login'>\n                <Button>Login</Button>\n            </Link>\n        </div>\n        : \n        <h1 className=\"text-3xl text-center\">Verifying user...</h1>\n      }\n    </Layout>\n  );\n};\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {verifyUser: (data) => dispatch(actions.verifyUser(data)),};\n};\n\nexport default  connect((state) => state, mapDispatchToProps)(withRouter(Page));\n"]},"metadata":{},"sourceType":"module"}