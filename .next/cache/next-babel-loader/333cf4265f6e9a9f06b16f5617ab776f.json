{"ast":null,"code":"var _jsxFileName = \"/home/adam/loma/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport { wrapper } from \"../store\";\nimport { Button } from \"semantic-ui-react\";\nimport actions from \"../store/actions\";\nimport axios from \"axios\";\n\nconst Page = props => {\n  // if (products != undefined && products.length > 0) {\n  //   products = products.map((product, index) => {\n  //     return (<li key={product.ProductId}>{product.title}</li>)\n  //   })\n  // }\n  console.log(\"SERVER SIDE PROPS:\");\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"LOMA\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getStaticProps = wrapper.getStaticProps(({\n  store,\n  preview\n}) => {\n  axios.get(`${process.env.NEXT_PUBLIC_API_URL}/market/products`).then(function (response) {\n    store.dispatch({\n      type: actions.GET_PRODUCTS,\n      payload: response.data\n    });\n  }).catch(function (error) {\n    store.dispatch({\n      type: actions.ERROR,\n      payload: \"FAILED TO GET PRODUCTS\"\n    });\n  });\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTest: val => dispatch(actions.setTest(val))\n  };\n};\n\nexport default connect(state => state, mapDispatchToProps)(Page);","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/index.js"],"names":["Layout","connect","wrapper","Button","actions","axios","Page","props","console","log","getStaticProps","store","preview","get","process","env","NEXT_PUBLIC_API_URL","then","response","dispatch","type","GET_PRODUCTS","payload","data","catch","error","ERROR","mapDispatchToProps","setTest","val","state"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAdD;;AAgBA,OAAO,MAAMC,cAAc,GAAGR,OAAO,CAACQ,cAAR,CAAuB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAC3EP,EAAAA,KAAK,CACFQ,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,kBAD1C,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBP,IAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEhB,OAAO,CAACiB,YADD;AAEbC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFL,KAAf;AAID,GAPH,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBd,IAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAEhB,OAAO,CAACsB,KADD;AAEbJ,MAAAA,OAAO,EAAE;AAFI,KAAf;AAID,GAbH;AAcD,CAf6B,CAAvB;;AAiBP,MAAMK,kBAAkB,GAAIR,QAAD,IAAc;AACvC,SAAO;AAAES,IAAAA,OAAO,EAAGC,GAAD,IAASV,QAAQ,CAACf,OAAO,CAACwB,OAAR,CAAgBC,GAAhB,CAAD;AAA5B,GAAP;AACD,CAFD;;AAIA,eAAe5B,OAAO,CAAE6B,KAAD,IAAWA,KAAZ,EAAmBH,kBAAnB,CAAP,CAA8CrB,IAA9C,CAAf","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport { wrapper } from \"../store\";\nimport { Button } from \"semantic-ui-react\";\n\nimport actions from \"../store/actions\";\nimport axios from \"axios\";\n\nconst Page = (props) => {\n  // if (products != undefined && products.length > 0) {\n  //   products = products.map((product, index) => {\n  //     return (<li key={product.ProductId}>{product.title}</li>)\n  //   })\n  // }\n  console.log(\"SERVER SIDE PROPS:\");\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl text-center\">LOMA</h1>\n      <ul>{/* {products} */}</ul>\n    </Layout>\n  );\n};\n\nexport const getStaticProps = wrapper.getStaticProps(({ store, preview }) => {\n  axios\n    .get(`${process.env.NEXT_PUBLIC_API_URL}/market/products`)\n    .then(function (response) {\n      store.dispatch({\n        type: actions.GET_PRODUCTS,\n        payload: response.data,\n      });\n    })\n    .catch(function (error) {\n      store.dispatch({\n        type: actions.ERROR,\n        payload: \"FAILED TO GET PRODUCTS\",\n      });\n    });\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return { setTest: (val) => dispatch(actions.setTest(val)) };\n};\n\nexport default connect((state) => state, mapDispatchToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}