{"ast":null,"code":"var _jsxFileName = \"/home/adam/loma/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { wrapper } from \"../store\";\nimport { Button } from \"semantic-ui-react\";\n\nconst Page = props => {\n  // if (products != undefined && products.length > 0) {\n  //   products = products.map((product, index) => {\n  //     return (<li key={product.ProductId}>{product.title}</li>)\n  //   })\n  // }\n  console.log(\"SERVER SIDE PROPS:\");\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"LOMA\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getStaticProps = wrapper.getStaticProps(({\n  store,\n  preview\n}) => {\n  axios.get(`${process.env.NEXT_PUBLIC_API_URL}/market/products`).then(function (response) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS,\n      payload: response.data\n    });\n  }).catch(function (error) {\n    dispatch({\n      type: actionTypes.ERROR,\n      payload: \"FAILED TO GET PRODUCTS\"\n    });\n  });\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTest: val => dispatch(actions.setTest(val))\n  };\n};\n\nexport default connect(state => state, mapDispatchToProps)(Page);","map":{"version":3,"sources":["/home/adam/loma/frontend/pages/index.js"],"names":["Layout","connect","actions","wrapper","Button","Page","props","console","log","getStaticProps","store","preview","axios","get","process","env","NEXT_PUBLIC_API_URL","then","response","dispatch","type","actionTypes","GET_PRODUCTS","payload","data","catch","error","ERROR","mapDispatchToProps","setTest","val","state"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtB;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CAlBD;;AAoBA,OAAO,MAAMC,cAAc,GAAGN,OAAO,CAACM,cAAR,CAC5B,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpBC,EAAAA,KAAK,CACFC,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,kBAD1C,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC,WAAW,CAACC,YAApB;AAAkCC,MAAAA,OAAO,EAAEL,QAAQ,CAACM;AAApD,KAAD,CAAR;AACD,GAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEC,WAAW,CAACM,KADX;AAEPJ,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAVH;AAUQ,CAZgB,CAAvB;;AAgBP,MAAMK,kBAAkB,GAAIT,QAAD,IAAc;AACvC,SAAO;AAAEU,IAAAA,OAAO,EAAGC,GAAD,IAASX,QAAQ,CAACjB,OAAO,CAAC2B,OAAR,CAAgBC,GAAhB,CAAD;AAA5B,GAAP;AACD,CAFD;;AAIA,eAAe7B,OAAO,CAAE8B,KAAD,IAAWA,KAAZ,EAAmBH,kBAAnB,CAAP,CAA8CvB,IAA9C,CAAf","sourcesContent":["import Layout from \"../components/hoc/layout\";\nimport { connect } from \"react-redux\";\nimport actions from \"../store/actions\";\nimport { wrapper } from \"../store\";\nimport { Button } from \"semantic-ui-react\";\n\n\nconst Page = (props) => {\n  \n  // if (products != undefined && products.length > 0) {\n  //   products = products.map((product, index) => {\n  //     return (<li key={product.ProductId}>{product.title}</li>)\n  //   })\n  // }\n  console.log(\"SERVER SIDE PROPS:\")\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl text-center\">LOMA</h1>\n      <ul>\n        {/* {products} */}\n      </ul>\n    </Layout>\n  );\n  \n};\n\nexport const getStaticProps = wrapper.getStaticProps(\n  ({ store, preview }) => {\n      axios\n        .get(`${process.env.NEXT_PUBLIC_API_URL}/market/products`)\n        .then(function (response) {\n          dispatch({ type: actionTypes.GET_PRODUCTS, payload: response.data });\n        })\n        .catch(function (error) {\n          dispatch({\n            type: actionTypes.ERROR,\n            payload: \"FAILED TO GET PRODUCTS\",\n          });\n        });  }\n);\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return { setTest: (val) => dispatch(actions.setTest(val)) };\n};\n\nexport default connect((state) => state, mapDispatchToProps)(Page);\n"]},"metadata":{},"sourceType":"module"}